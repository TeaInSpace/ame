syntax = "proto3";

package ame.v1 ;

message TaskIdentifier {
  string name = 1;
}

enum TaskType {
  Pipenv = 0;
  Mlflow = 1;
}

message TaskTemplate {
  string projectid = 1;
  string command = 2;
  string name = 3;
  optional string image = 4;
  optional TaskType taskType = 5;
}

message CreateTaskRequest {
  TaskIdentifier id = 1;
  TaskTemplate template = 2;
}

message Empty {
}

message ProjectFileIdentifier {
  string taskid= 1;
  string filepath = 2;
}

message FileChunk {
  bytes contents = 1;
}

message TaskProjectDirectoryStructure {
  string projectid = 1;
  TaskIdentifier taskid = 2; 
  repeated string paths = 3;
}

message ProjectFileChunk {
  oneof messages {
    FileChunk chunk = 1;
    ProjectFileIdentifier identifier = 2;
  }
}

message TaskLogRequest {
  TaskIdentifier taskid = 1;
  optional int32 start_from = 2;
  optional bool watch = 3;
}

message LogEntry {
  bytes contents = 1;
}

message ProjectSource {
  optional GitProjectSource git = 1;
}

message GitProjectSource {
  string repository = 1;
}

service AmeService {
  rpc GetTask(TaskIdentifier) returns (TaskTemplate) {}
  rpc CreateTask(CreateTaskRequest) returns (TaskIdentifier) {}
  rpc DeleteTask(TaskIdentifier) returns (Empty) {}
  rpc CreateTaskProjectDirectory(TaskProjectDirectoryStructure) returns (Empty) {}
  rpc UploadProjectFile(stream ProjectFileChunk) returns (Empty) {}
  rpc StreamTaskLogs(TaskLogRequest) returns (stream LogEntry) {}
}
