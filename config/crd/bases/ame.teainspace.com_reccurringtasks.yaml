---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: reccurringtasks.ame.teainspace.com
spec:
  group: ame.teainspace.com
  names:
    kind: ReccurringTask
    listKind: ReccurringTaskList
    plural: reccurringtasks
    singular: reccurringtask
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReccurringTask is the Schema for the reccurringtasks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ReccurringTaskSpec defines the desired state of ReccurringTask
            properties:
              schedule:
                description: Cron schedule used for scheduling Task execution.
                type: string
              taskSpec:
                description: TaskRef references a Task by name.
                properties:
                  env:
                    description: Environment variables that will be made avaialbe
                      to the Task during execution.
                    items:
                      description: A TaskEnvVar represents an environment variable
                        made available to a task during execution.
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  pipeline:
                    description: Pipeline defines a sequence of tasks to execute.
                      If a pipeline is specified the rest of the fields in this specification
                      are ignored.
                    items:
                      description: A PipelineStep is essentially a duplicated of the
                        TaskSpec, which represents each step in a pipeline. Due to
                        limitations with the current tooling used for generated manifests
                        from the types in this file, we can't have recursive types
                        and therefore we need this duplicated for now. See issue 43.
                      properties:
                        env:
                          description: Environment variables that will be made avaialbe
                            to the Task during execution.
                          items:
                            description: A TaskEnvVar represents an environment variable
                              made available to a task during execution.
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        runcommand:
                          description: The command AME will use to execute the Task.
                            The command must be runnable from a bash shell.
                          type: string
                        secrets:
                          description: Secrets that will be made available to the
                            Task during execution.
                          items:
                            description: A TaskSecret represnts a secret identified
                              by the Name which will be injected into the Task's execution
                              as an environment variable with EnvKey as the key.
                            properties:
                              envkey:
                                type: string
                              name:
                                type: string
                            required:
                            - envkey
                            - name
                            type: object
                          type: array
                        taskname:
                          description: TaskName is the name of the task represented
                            by this step.
                          type: string
                      type: object
                    type: array
                  projectid:
                    description: A unique identifier for the project wich the Task
                      will be running based on.
                    type: string
                  runcommand:
                    description: 'The command AME will use to execute the Task. The
                      command must be runnable from a bash shell. TODO: define propper
                      requirements for the run command.'
                    type: string
                  secrets:
                    description: Secrets that will be made available to the Task during
                      execution.
                    items:
                      description: A TaskSecret represnts a secret identified by the
                        Name which will be injected into the Task's execution as an
                        environment variable with EnvKey as the key.
                      properties:
                        envkey:
                          type: string
                        name:
                          type: string
                      required:
                      - envkey
                      - name
                      type: object
                    type: array
                  source:
                    description: source defines where AME will pull the project from.
                      This can either be AME's own object storage or a git repository.
                    properties:
                      ameStoragePath:
                        description: AmeStoragePath defines the path within AME's
                          object storage where the Project should be copied from.
                        type: string
                      gitReference:
                        description: GitReference contains the reference which will
                          be checked out from within the Git repository.
                        type: string
                      gitRepository:
                        description: GitRepository should point to the git repo containing
                          the Task's project.
                        type: string
                    required:
                    - ameStoragePath
                    - gitReference
                    - gitRepository
                    type: object
                type: object
            required:
            - schedule
            - taskSpec
            type: object
          status:
            description: ReccurringTaskStatus defines the observed state of ReccurringTask
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
