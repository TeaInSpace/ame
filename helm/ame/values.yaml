# Default values for ame.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Version used to select the images for AME's server, controller and default images Tasks and model deployments.
ameVersion: ""

crds:
  # -- Flag for installing custom resource definitions with this see, see a discussion on the tradeoffs [here](TODO).
  install: true

server:
  replicaCount: 1
  service:
    type: ClusterIP
    port: 3342
  name: server
  serviceAccount:
    create: true
    name: ame-server
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
      cert-manager.io/cluster-issuer: "selfsigned-cluster-issuer"
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"
      nginx.ingress.kubernetes.io/enable-cors: "false"
      nginx.ingress.kubernetes.io/cors-allow-headers: "DNT, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization, x-grpc-web"
    enabled: true
    className: nginx
    hosts:
      - host: ame.local
        http:
          paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: ame-server-service
                port:
                  number: 3342 
    tls: 
      - hosts:
        - ame.local
        secretName: ame-tls-cert
  autoscaling:
    enabled: false
  labels: {}
  podSecurityContext: {}
  image:
    repository: "ghcr.io/teainspace/ame-server/main"
    tag: "latest"
    pullPolicy: Always
  resources: {}

controller:
  name: controller
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
  serviceAccount:
    create: true
    name: ame-controller
  autoscaling:
    enabled: false
  labels: {}
  podSecurityContext: {}
  image:
    repository: "ghcr.io/teainspace/ame-controller/main"
    tag: "d162"
    pullPolicy: Always

  logging:
    env_filter: info,controller=debug

mlflow:
  endpoint: "http://mlflow.ame-system.svc.cluster.local:5000"

argo-workflows:
  # -- Enabling this will deploy argo workflows a long side AME automatically.
  enabled: true

# minio options
minio:
  # -- Enabling this will deploy deploy a minio instance a long side AME.
  enabled: true

objectStorage:
  s3:
    # -- Name of the Kubernetes secret containing access information for the object storage, this is expected to be in the same namespace as AME.
    secretName: "ame-minio"
    # -- Key for the access ID in the Kubernetes secret.
    accessIdKey: "root-user"
    # -- Key for the access password in the Kubernetes secret.
    accessSecretKey: "root-password"
    endpoint: "http://ame-minio:9000"
    bucket : ameprojectstorage

task:
  image:
    repository:
      repository: "ghcr.io/teainspace/ame-controller/main"
      tag: "d162"
    pullPolicy: Always
  # TODO add security options here
  securty:

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

  # TODO: set default resources
  resources:

  # -- The service account used by Tasks with minimal permissions.
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "ame-task"
  
  tolerations: []


  affinity: {}
  nodeSelector: {}

models:
  deployments:
    # TODO add security options here
    security:

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000

    # TODO: set default resources
    resources:
    # -- The service account used by Tasks with minimal permissions.
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: "ame-model"
    image:
      repository: "ghcr.io/teainspace/ame-executor/main"
      tag: "d162"
      pullPolicy: Always
  
    nodeSelector: {}


    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    ingress:
      host: ""
      defaultIngress: ""

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    tolerations: []


    affinity: {}


