apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ame-server
  namespace: ame-system
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email, x-auth-request-preferred-username, authorization"
    nginx.ingress.kubernetes.io/configuration-snippet: |   
      auth_request_set $token $upstream_http_authorization;
      proxy_set_header Authorization $token;
      proxy_pass_header Authorization;
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
      # nginx.ingress.kubernetes.io/rewrite-target: /$2

spec:
  ingressClassName: nginx
  rules:
  - host: 20.4.90.180.nip.io   
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: ame-server-service
            port:
              number: 3342 
  tls: # < placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
    - hosts:
      - 20.4.90.180.nip.io
      secretName: ame-tls-cert # < cert-manager w-ll store the created certificate in this secret.
---
kind: Service
apiVersion: v1
metadata:
  name: ame-server-service
spec:
  type: ClusterIP
  selector:
    app: ame-server
  ports:
    - port: 3342
      targetPort: 3342
